name: Node.js App Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Create .env file
      run: echo "PORT=3000" >> .env
           echo "HOST=http://localhost" >> .env
           echo "ALLOWED_ORIGIN=http://localhost:3000" >> .env
           echo "ACCESS_TOKEN_PRIVATE_KEY=${{ secrets.ACCESS_TOKEN_PRIVATE_KEY }}" >> .env
           echo "REFRESH_TOKEN_PRIVATE_KEY=${{ secrets.REFRESH_TOKEN_PRIVATE_KEY }}" >> .env
           echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> .env
           echo "GOOGLE_KEY=${{ secrets.GOOGLE_KEY }}" >> .env
           echo "GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }}" >> .env
           echo "APPLE_PRIVATE_KEY=${{ secrets.APPLE_PRIVATE_KEY }}" >> .env
           echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x' # Change to your required Node.js version

    - name: Install rsync
      run: sudo apt-get update && sudo apt-get install -y rsync

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Build the application
      run: npm run build

    - name: Copy application files to server
      run: rsync -avz -e "sshpass -p '${{ secrets.SERVER_PASSWORD }}' ssh -o StrictHostKeyChecking=no" ./ ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:~/server/my-business-back/

    - name: SSH into the server and start the app
      run: sshpass -p ${{ secrets.SERVER_PASSWORD }} ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} 'cd ~/server/my-business-back/ && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash && export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" &&  nvm install 16 && nvm use 16 && npm install pm2 -g && pm2 restart index'
